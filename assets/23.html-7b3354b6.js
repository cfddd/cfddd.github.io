import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as n,f as l,a as s,b as a}from"./app-587dee3d.js";const e={},m=l('<h1 id="处理机调度与死锁" tabindex="-1"><a class="header-anchor" href="#处理机调度与死锁" aria-hidden="true">#</a> 处理机调度与死锁</h1><h2 id="调度" tabindex="-1"><a class="header-anchor" href="#调度" aria-hidden="true">#</a> 调度</h2><p>调度是为同时需要资源的多方，分配所需资源的方法。<br> 凡有<strong>稀缺资源</strong>(“排队”)之处，皆有调度。</p><p><strong>调度的资源</strong></p><ul><li>处理机（CPU）<br> 从就绪队列中挑选下一个占用CPU运行的进程</li><li>临界区<br> 信号量V操作后，从等待队列挑选一个进程唤醒</li><li>内存<br> 从外存的挂起队列挑选一个进程激活</li><li>I/O设备<br> 决定I/O设备处理等待队列中的哪个I/O请求</li></ul><p><strong>调度的时机</strong></p><ol><li>进程从运行态切换到等待态(非抢占调度)<br> I/O操作、wait操作、sleep……</li><li>进程退出(非抢占调度)<br> return、exit、出错……</li><li>进程时间片完(抢占调度)<br> 高优先级进程抢夺<br> 时钟中断</li><li>进程从等待到就绪、新建(抢占调度)<br> I/O中断、fork</li></ol><h2 id="调度算法" tabindex="-1"><a class="header-anchor" href="#调度算法" aria-hidden="true">#</a> 调度算法</h2><p><strong>目标和相关定义</strong><br><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230531205013157-1611416225.png" alt="img" loading="lazy"></p>',9),r=s("ul",null,[s("li",null,[s("p",null,"运行时间:占用cpu运行的时间"),s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mtext",null,"周转时间"),s("mo",null,"="),s("mtext",null,"等待时间"),s("mo",null,"+"),s("mtext",null,"运行时间")]),s("annotation",{encoding:"application/x-tex"},"周转时间 = 等待时间 + 运行时间")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord cjk_fallback"},"周转时间"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord cjk_fallback"},"等待时间"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord cjk_fallback"},"运行时间")])])])]),s("p",null,[s("strong",null,"响应时间"),a("在"),s("strong",null,"等待时间"),a("里面")]),s("p",null,[a("带权（归一化）周转时间"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"𝑾"),s("mo",null,"="),s("msub",null,[s("mi",null,"T"),s("mi",null,"t")]),s("mi",{mathvariant:"normal"},"/"),s("msub",null,[s("mi",null,"T"),s("mi",null,"s")]),s("mtext",null,"，其中"),s("msub",null,[s("mi",null,"T"),s("mi",null,"t")])]),s("annotation",{encoding:"application/x-tex"},"𝑾 = T_t/T_s，其中T_t")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6861em"}}),s("span",{class:"mord boldsymbol",style:{"margin-right":"0.18625em"}},"W"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2806em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"t")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mord"},"/"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"s")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mord cjk_fallback"},"，其中"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2806em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"t")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 是进程的周转时间，"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mi",null,"s")])]),s("annotation",{encoding:"application/x-tex"},"T_s")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"s")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a(" 是该进程接受服务的时间（即运行时间）")])])],-1),p=l('<h4 id="先来先服务-排队算法" tabindex="-1"><a class="header-anchor" href="#先来先服务-排队算法" aria-hidden="true">#</a> 先来先服务,排队算法</h4><p>FCFS (Fisrt Come Fisrt Serve) 或 FIFO (First In First Out)</p><ul><li>缺点:周转时间长<br><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230531205853899-650275933.png" alt="img" loading="lazy"><br><strong>I/O型进程</strong>必须等待计算型进程用完CPU，将导致<br> 设备使用率低，对短作业不公平</li></ul><h4 id="最短作业优先" tabindex="-1"><a class="header-anchor" href="#最短作业优先" aria-hidden="true">#</a> 最短作业优先</h4><p>SJF(Shortest Job First) 或 Shortest Process Next-<br><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230531205941681-1882829108.png" alt="img" loading="lazy"><br> 在目前的假设条件下，可以证明，SJF调度算法的平均<br> T周转时间是**最优（optimal）**的</p><ul><li>缺点:作业可能在任何时刻到达,周转时间也会变长<img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230531210401005-12803784.png" alt="img" loading="lazy"></li></ul><h4 id="最短剩余时间优先" tabindex="-1"><a class="header-anchor" href="#最短剩余时间优先" aria-hidden="true">#</a> 最短剩余时间优先</h4><p>SRT(Shortest Remaining Time)或STCF(Shortest Time-to-Complete First-</p><p>新来作业产生中断，重新调度<img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230531210654662-1982746150.png" alt="img" loading="lazy"></p><p><strong>缺点</strong></p><ul><li>可能产生饥饿(starvation)<br> 在上面的例子中，从10时刻起，如果源源���断有短进程到来，则作业A始终得不到执行 <ul><li>SJF也可能饥饿，比如0时刻到来10和100作业，之后不断有10作业到来</li><li>由于允许抢占，SRT比SJF更容易饥饿</li><li>对长作业不公平</li></ul></li><li>算法的实现更困难，开销更大 <ul><li>必须支持中断处理（抢占）</li><li>需要计算“已运行的时间”</li><li>每次中断都要调度</li></ul></li></ul><h4 id="轮转-轮询-调度算法" tabindex="-1"><a class="header-anchor" href="#轮转-轮询-调度算法" aria-hidden="true">#</a> 轮转（轮询）调度算法</h4><p>响应时间比上面三种都要好</p><p>RR（ Round Robin ），又称时间片调度<br><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230531211600479-723961171.png" alt="img" loading="lazy"></p><ul><li><p>每运行一个时间片（time slice, scheduling quantum，时钟周期的倍数）产生时钟中断，并重新调度</p></li><li><p>公平，长短作业都能兼顾，不会饥饿</p></li><li><p>调度时算法简单（可仅用FCFS）</p></li></ul><p><strong>时间片大小的选取</strong><br><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230531211803939-735899355.png" alt="img" loading="lazy"></p><p><strong>缺点</strong></p>',17),c=s("ul",null,[s("li",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mtext",null,"周转")])]),s("annotation",{encoding:"application/x-tex"},"T_{周转}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord cjk_fallback mtight"},"周转")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("是各种调度算法中较差的，甚至可能还不如FCFS")])],-1),h=s("h4",{id:"高响应比优先",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#高响应比优先","aria-hidden":"true"},"#"),a(" 高响应比优先")],-1),o=s("p",null,"短作业尽快响应，长作业也能照顾到，平均周转作业时代的一个折中方案",-1),g=s("p",null,[s("strong",null,"响应比（Response Ratio）"),a(),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"𝑹"),s("mi",null,"𝒓")])]),s("annotation",{encoding:"application/x-tex"},"𝑹_𝒓")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8361em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord boldsymbol",style:{"margin-right":"0.02559em"}},"R"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1611em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0256em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord boldsymbol mtight",style:{"margin-right":"0.11111em"}},"r")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])],-1),u=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"𝑹"),s("mi",null,"𝒓")]),s("mo",null,"="),s("mo",{stretchy:"false"},"("),s("mtext",null,"等待时间"),s("mo",null,"+"),s("mtext",null,"运行时间"),s("mo",{stretchy:"false"},")"),s("mi",{mathvariant:"normal"},"/"),s("mtext",null,"运行时间")]),s("annotation",{encoding:"application/x-tex"}," 𝑹_𝒓 = (等待时间 + 运行时间)/运行时间 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8361em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord boldsymbol",style:{"margin-right":"0.02559em"}},"R"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1611em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0256em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord boldsymbol mtight",style:{"margin-right":"0.11111em"}},"r")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord cjk_fallback"},"等待时间"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord cjk_fallback"},"运行时间"),s("span",{class:"mclose"},")"),s("span",{class:"mord"},"/"),s("span",{class:"mord cjk_fallback"},"运行时间")])])])])],-1),d=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mo",null,"="),s("mtext",null,"周转时间"),s("mi",{mathvariant:"normal"},"/"),s("mtext",null,"运行时间")]),s("annotation",{encoding:"application/x-tex"}," = 周转时间/运行时间 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.3669em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord cjk_fallback"},"周转时间"),s("span",{class:"mord"},"/"),s("span",{class:"mord cjk_fallback"},"运行时间")])])])])],-1),b=l('<p>当等待时间同样长，短作业的响应比高，优先执行</p><p>一般来说，没有抢占，即等待时间 == 响应时间</p><p>随等待时间的增加，响应比会上升，从而照顾到长作业<br><img src="https://img2023.cnblogs.com/blog/2740326/202306/2740326-20230601143953982-1154051337.png" alt="img" loading="lazy"></p><h4 id="终极解决方案-mlfq" tabindex="-1"><a class="header-anchor" href="#终极解决方案-mlfq" aria-hidden="true">#</a> 终极解决方案-MLFQ</h4><p><strong>多级队列(静态优先级)调度</strong>：</p><p>多级=多个队列，各有不同的<strong>优先级（Priority）</strong><br><img src="https://img2023.cnblogs.com/blog/2740326/202306/2740326-20230601150915615-404994089.png" alt="img" loading="lazy"><br><img src="https://img2023.cnblogs.com/blog/2740326/202306/2740326-20230601145804205-856071840.png" alt="img" loading="lazy"><br> 具体怎样实现是机制(mechanism ，战术)，如：</p><ul><li>应该定多少个优先级？</li><li>每级队列使用什么调度算法（FCFS、RR）？</li><li>每级队列应该分多大的时间片？</li><li>当用完时间片，降多少级？</li><li>满足什么条件提升优先级？提升多少？</li><li>上述内容用什么方式实现？（查表、数学公式……）</li></ul><p><strong>规则</strong></p><ol><li>if Priority(A)&gt;Priority(B)，运行Ａ（不运行B），大于小于号要具体确定</li><li>if Priority(A)=Priority(B)，以RR方式运行A和B</li><li>新来的作业的优先级定为最高</li><li>如果一个作业（在一定时间S内累计）用完了它的时间片，则降低其优先级</li><li>如果作业在时间片前释放CPU，则保持不变</li><li>一定时间S后，将所有作业提升为最高优先级</li></ol><p><strong>缺点</strong>：</p><ul><li>对未知进程难以确定优先级；</li><li>饥饿；</li><li>误判：假如一个进程刚开始是计算型的，但随着时间变化为交互式的，却因为降级而永远不能被平等对待</li><li>博弈问题：吃透了规则的计算型进程，对普通计算型进程不公平</li></ul><h4 id="公平共享调度" tabindex="-1"><a class="header-anchor" href="#公平共享调度" aria-hidden="true">#</a> 公平共享调度</h4><ul><li>优先级调度的目标：优化周转时间、响应时间、资源利用率</li><li>公平调度的目标：让每个任务都能获得一定份额的系统资源</li></ul><p><strong>Lottery调度（摆烂调度）</strong></p><ul><li>为每个进程提供至少一张彩票</li><li>更重要的进程获得较多彩票</li><li>每次调度时，随机选取一张，握有该票的进程运行</li><li>可在需要时将彩票交给合作进程</li></ul><h2 id="调度算法总结" tabindex="-1"><a class="header-anchor" href="#调度算法总结" aria-hidden="true">#</a> 调度算法总结</h2><figure><img src="https://img2023.cnblogs.com/blog/2740326/202306/2740326-20230601165854916-1309817651.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>',17),y=[m,r,p,c,h,o,g,u,d,b];function x(v,k){return i(),n("div",null,y)}const w=t(e,[["render",x],["__file","23.html.vue"]]);export{w as default};
