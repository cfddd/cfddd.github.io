const e=JSON.parse(`{"key":"v-2aea0810","path":"/Algorithm/contents/2_.html","title":"最长有效括号","lang":"zh-CN","frontmatter":{"title":"最长有效括号","icon":"calculator","description":"题目 最长有效括号 方法一：dp int longestValidParentheses(string s) { int ans = 0; stack&lt;int&gt; sta; sta.push(-1); for(int i = 0;i &lt; s.size();i ++) { if(s[i] == '(')sta.push(i); else{ sta.pop(); if(sta.empty()) { sta.push(i); }else{ ans = max(ans,i - sta.top()); } } } return ans; }","head":[["meta",{"property":"og:url","content":"https://cfddd.github.io/Algorithm/contents/2_.html"}],["meta",{"property":"og:site_name","content":"俄罗斯刺沙蓬"}],["meta",{"property":"og:title","content":"最长有效括号"}],["meta",{"property":"og:description","content":"题目 最长有效括号 方法一：dp int longestValidParentheses(string s) { int ans = 0; stack&lt;int&gt; sta; sta.push(-1); for(int i = 0;i &lt; s.size();i ++) { if(s[i] == '(')sta.push(i); else{ sta.pop(); if(sta.empty()) { sta.push(i); }else{ ans = max(ans,i - sta.top()); } } } return ans; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-05T07:04:01.000Z"}],["meta",{"property":"article:author","content":"俄罗斯刺沙蓬"}],["meta",{"property":"article:modified_time","content":"2023-07-05T07:04:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"最长有效括号\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-05T07:04:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"俄罗斯刺沙蓬\\",\\"url\\":\\"https://cfddd.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"题目","slug":"题目","link":"#题目","children":[]},{"level":2,"title":"方法一：dp","slug":"方法一-dp","link":"#方法一-dp","children":[]},{"level":2,"title":"方法二：栈","slug":"方法二-栈","link":"#方法二-栈","children":[]},{"level":2,"title":"方法三：贪心","slug":"方法三-贪心","link":"#方法三-贪心","children":[]},{"level":2,"title":"相关题目","slug":"相关题目","link":"#相关题目","children":[]}],"git":{"createdTime":1688540641000,"updatedTime":1688540641000,"contributors":[{"name":"cfd","email":"2909047212@qq.com","commits":1}]},"readingTime":{"minutes":1.15,"words":344},"filePathRelative":"Algorithm/contents/2_.md","localizedDate":"2023年7月5日","excerpt":"<h2> 题目</h2>\\n<ul>\\n<li><a href=\\"https://leetcode.cn/problems/longest-valid-parentheses/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">最长有效括号</a></li>\\n</ul>\\n<h2> 方法一：dp</h2>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>  int longestValidParentheses(string s) {\\n        int ans = 0;\\n        stack&lt;int&gt; sta;\\n        sta.push(-1);\\n        for(int i = 0;i &lt; s.size();i ++)\\n        {\\n            if(s[i] == '(')sta.push(i);\\n            else{\\n                sta.pop();\\n                if(sta.empty())\\n                {\\n                    sta.push(i);\\n                }else{\\n                    ans = max(ans,i - sta.top());\\n                }\\n            }\\n        }\\n        return ans;\\n  }\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
