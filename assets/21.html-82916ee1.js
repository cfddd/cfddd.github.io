import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as o,f as g}from"./app-85eb831d.js";const a={},t=g('<h1 id="第一章导论" tabindex="-1"><a class="header-anchor" href="#第一章导论" aria-hidden="true">#</a> 第一章导论</h1><h2 id="操作系统概述" tabindex="-1"><a class="header-anchor" href="#操作系统概述" aria-hidden="true">#</a> 操作系统概述</h2><p><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230529111424121-1056846972.png" alt="img" loading="lazy"><br><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230529111704570-36938531.png" alt="img" loading="lazy"><br><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230529134301162-1047284421.png" alt="img" loading="lazy"></p><ul><li><strong>并发</strong>指的是多个程序可以同时运行的现象。并发的&quot;同时&quot;是经过上下文快速切换，使得看上去多个进程同时都在运行的现象，是一种OS欺骗用户的现象。</li><li><strong>并行</strong>的&quot;同时&quot;是同一时刻可以多个进程在运行(处于running)</li></ul><p><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230529111728782-1897252569.png" alt="img" loading="lazy"><br><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230529133622515-1244002279.png" alt="img" loading="lazy"><br><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230529111826359-157878014.png" alt="img" loading="lazy"><br><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230529133702236-661989680.png" alt="img" loading="lazy"><br> RAM随机存取存储器,也叫主存，它可以随时读写，速度很快，通常作为 <strong>操作系统</strong> 或者其他正在运行中的程序的临时数据存储介质<br><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230529111943774-1510068287.png" alt="img" loading="lazy"><br> BIOS基本输入输出系统，是个人电脑启动时加载的第一个软件，其实，它是一组固化到计算机内主板上一个ROM芯片上的程序，保存着计算机最重要的基本输入输出程序，开启后自己按程序和系统自启动程序。它可从CMOS中读写系统设置的具体信息。 其主要功能是为计算机提供最底层的、最直接的硬件设置和控制。</p><p>ROM只读存储的简称，是一种只能读出实现所存数据的固态半导体存储器。通常用在不需经常变更资料的电子或电脑系统中，并且资料不会因为电源关闭而消失。</p><p>EPROM是一种断电后仍能保留数据的计算机储存芯片——即非易失性的（非挥发性）</p><h2 id="cpu的状态" tabindex="-1"><a class="header-anchor" href="#cpu的状态" aria-hidden="true">#</a> cpu的状态</h2><p><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230529140700477-455216696.png" alt="img" loading="lazy"><br><img src="https://img2023.cnblogs.com/blog/2740326/202305/2740326-20230529140804595-557059495.png" alt="img" loading="lazy"></p><ul><li>特权指令：在内核态（管态）下运行的指令 <ul><li>不仅能访问用户空间，还能访问系统空间。</li><li>如启动外部设备、设置系统时钟、管中断、切换执<br> 行状态、I/O指令</li></ul></li><li>非特权指令：在用户态（目态）下运行的指令 <ul><li>应用程序所使用的都是非特权指令。</li><li>防止应用程序的运行异常对系统造成破坏。</li><li>仅能访问用户空间</li></ul></li></ul><p>处理器每执行完一条指令以后，硬件的中断扫描机构立即检查有无中断发生。若无，继续执行，若有，暂停当前进程，转由OS内核的中断处理程序接手。</p><p>操作系统作为用户和计算机硬件系统之间的接口，可以通过以下3种方式使用计算机：</p><ol><li><p>命令行界面（CLI）</p></li><li><p>图形用户界面（GUI）</p></li><li><p>应用程序接口（API）</p></li></ol><h2 id="os结构设计" tabindex="-1"><a class="header-anchor" href="#os结构设计" aria-hidden="true">#</a> OS结构设计</h2><ul><li>模块化结构：将OS划分为若干个具有一定<br> 独立性的模块。</li><li>分层式结构：划分层次，每一层仅使用下一层所提供的功能和服务。</li><li>微内核OS结构：内核仅保留极少的功能，提供服务之间的通信机制。在设计微内核OS时，采用了<strong>面向对象的技术</strong>，与传统的操作系统相比，其优点是提高了系统的<strong>灵活性、可扩充性，增强了系统的可靠性</strong>，提供了对分布式系统的支持，<strong>增强了系统的可靠性和可移植性</strong>。但是，微内核与文件管理、设备驱动、虚拟内存管理、进程管理等其他上层模块之间需要有较高的通信开销。</li><li>宏内核则将所有功能整合在一起，各个功能模块之间可以直接调用。这样的优势就是性能极高，但其缺点也很明显，就是其耦合度高，一旦其中一个模块出现问题，其他所有的模块都可能会受到影响。</li></ul><h2 id="系统调用" tabindex="-1"><a class="header-anchor" href="#系统调用" aria-hidden="true">#</a> 系统调用</h2><p><strong>系统调用</strong>是<strong>操作系统内核</strong>提供给应用程序的基础接口，需要运行在操作系统的核心模式下，以确保有权限执行某些 CPU 特权指令。<br> 系统调用本身并非内核函数，但它是由内核函数实现的。<br> 用户程序可以利用这组接口来调用系统服务，例如磁盘I/O会用到的open，write，read等服务。</p>',17),r=[t];function n(s,c){return i(),o("div",null,r)}const m=l(a,[["render",n],["__file","21.html.vue"]]);export{m as default};
