const l=JSON.parse(`{"key":"v-43860f99","path":"/Algorithm/contents/D.WatchtheVideos.html","title":"D. Watch the Videos","lang":"zh-CN","frontmatter":{"title":"D. Watch the Videos","icon":"calculator","description":"https://codeforces.com/problemset/problem/1765/D 观察找规律 最大的和二分最小的，然后交替相邻，看是否合法 找到最长的合法段 答案就是总长度减去合法段加上原先的长度 #include&lt;bits/stdc++.h&gt; #define debug1(a) cout&lt;&lt;#a&lt;&lt;'='&lt;&lt; a &lt;&lt; endl; #define debug2(a,b) cout&lt;&lt;#a&lt;&lt;\\" = \\"&lt;&lt;a&lt;&lt;\\" \\"&lt;&lt;#b&lt;&lt;\\" = \\"&lt;&lt;b&lt;&lt;endl; #define debug3(a,b,c) cout&lt;&lt;#a&lt;&lt;\\" = \\"&lt;&lt;a&lt;&lt;\\" \\"&lt;&lt;#b&lt;&lt;\\" = \\"&lt;&lt;b&lt;&lt;\\" \\"&lt;&lt;#c&lt;&lt;\\" = \\"&lt;&lt;c&lt;&lt;endl; #define debug4(a,b,c,d) cout&lt;&lt;#a&lt;&lt;\\" = \\"&lt;&lt;a&lt;&lt;\\" \\"&lt;&lt;#b&lt;&lt;\\" = \\"&lt;&lt;b&lt;&lt;\\" \\"&lt;&lt;#c&lt;&lt;\\" = \\"&lt;&lt;c&lt;&lt;\\" \\"&lt;&lt;#d&lt;&lt;\\" = \\"&lt;&lt;d&lt;&lt;endl; #define debug5(a,b,c,d,e) cout&lt;&lt;#a&lt;&lt;\\" = \\"&lt;&lt;a&lt;&lt;\\" \\"&lt;&lt;#b&lt;&lt;\\" = \\"&lt;&lt;b&lt;&lt;\\" \\"&lt;&lt;#c&lt;&lt;\\" = \\"&lt;&lt;c&lt;&lt;\\" \\"&lt;&lt;#d&lt;&lt;\\" = \\"&lt;&lt;d&lt;&lt;\\" \\"&lt;&lt;#e&lt;&lt;\\" = \\"&lt;&lt;e&lt;&lt;endl; #define debug0(x) cout &lt;&lt; \\"debug0: \\" &lt;&lt; x &lt;&lt; endl #define fr(t, i, n)for (long long i = t; i &lt; n; i++) #define YES cout&lt;&lt;\\"Yes\\"&lt;&lt;endl #define NO cout&lt;&lt;\\"No\\"&lt;&lt;endl #define fi first #define se second #define int long long using namespace std; typedef long long LL; typedef unsigned long long ULL; typedef pair&lt;int,int&gt; PII; typedef pair&lt;LL,LL&gt; PLL; //#pragma GCC optimize(3,\\"Ofast\\",\\"inline\\") //#pragma GCC optimize(2) const int N = 2e5+10; int a[N]; int n,v; bool check(int x) { int l = 1,r = x; while(l &lt; r) { //debug2(l,r); if(a[l] + a[r] &gt; v)return false; r --; if(l &lt; r &amp;&amp; a[l] + a[r] &gt; v)return false; l ++; } return true; } void solve() { cin &gt;&gt; n &gt;&gt; v; int sum = 0; for(int i = 1;i &lt;= n;i ++){ cin &gt;&gt; a[i]; sum += a[i]; } sort(a+1,a+n+1); int l = 1,r = n; int mid; while(l &lt; r) { mid = l+r+1&gt;&gt; 1; //debug3(l,r,mid); if(check(mid))l = mid; else r = mid-1; } cout &lt;&lt; sum + n - l + 1&lt;&lt; endl; } signed main() { /* ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); */ int T = 1;//cin &gt;&gt; T; while(T--){ solve(); } return 0; }","head":[["meta",{"property":"og:url","content":"https://cfddd.github.io/Algorithm/contents/D.WatchtheVideos.html"}],["meta",{"property":"og:site_name","content":"俄罗斯刺沙蓬"}],["meta",{"property":"og:title","content":"D. Watch the Videos"}],["meta",{"property":"og:description","content":"https://codeforces.com/problemset/problem/1765/D 观察找规律 最大的和二分最小的，然后交替相邻，看是否合法 找到最长的合法段 答案就是总长度减去合法段加上原先的长度 #include&lt;bits/stdc++.h&gt; #define debug1(a) cout&lt;&lt;#a&lt;&lt;'='&lt;&lt; a &lt;&lt; endl; #define debug2(a,b) cout&lt;&lt;#a&lt;&lt;\\" = \\"&lt;&lt;a&lt;&lt;\\" \\"&lt;&lt;#b&lt;&lt;\\" = \\"&lt;&lt;b&lt;&lt;endl; #define debug3(a,b,c) cout&lt;&lt;#a&lt;&lt;\\" = \\"&lt;&lt;a&lt;&lt;\\" \\"&lt;&lt;#b&lt;&lt;\\" = \\"&lt;&lt;b&lt;&lt;\\" \\"&lt;&lt;#c&lt;&lt;\\" = \\"&lt;&lt;c&lt;&lt;endl; #define debug4(a,b,c,d) cout&lt;&lt;#a&lt;&lt;\\" = \\"&lt;&lt;a&lt;&lt;\\" \\"&lt;&lt;#b&lt;&lt;\\" = \\"&lt;&lt;b&lt;&lt;\\" \\"&lt;&lt;#c&lt;&lt;\\" = \\"&lt;&lt;c&lt;&lt;\\" \\"&lt;&lt;#d&lt;&lt;\\" = \\"&lt;&lt;d&lt;&lt;endl; #define debug5(a,b,c,d,e) cout&lt;&lt;#a&lt;&lt;\\" = \\"&lt;&lt;a&lt;&lt;\\" \\"&lt;&lt;#b&lt;&lt;\\" = \\"&lt;&lt;b&lt;&lt;\\" \\"&lt;&lt;#c&lt;&lt;\\" = \\"&lt;&lt;c&lt;&lt;\\" \\"&lt;&lt;#d&lt;&lt;\\" = \\"&lt;&lt;d&lt;&lt;\\" \\"&lt;&lt;#e&lt;&lt;\\" = \\"&lt;&lt;e&lt;&lt;endl; #define debug0(x) cout &lt;&lt; \\"debug0: \\" &lt;&lt; x &lt;&lt; endl #define fr(t, i, n)for (long long i = t; i &lt; n; i++) #define YES cout&lt;&lt;\\"Yes\\"&lt;&lt;endl #define NO cout&lt;&lt;\\"No\\"&lt;&lt;endl #define fi first #define se second #define int long long using namespace std; typedef long long LL; typedef unsigned long long ULL; typedef pair&lt;int,int&gt; PII; typedef pair&lt;LL,LL&gt; PLL; //#pragma GCC optimize(3,\\"Ofast\\",\\"inline\\") //#pragma GCC optimize(2) const int N = 2e5+10; int a[N]; int n,v; bool check(int x) { int l = 1,r = x; while(l &lt; r) { //debug2(l,r); if(a[l] + a[r] &gt; v)return false; r --; if(l &lt; r &amp;&amp; a[l] + a[r] &gt; v)return false; l ++; } return true; } void solve() { cin &gt;&gt; n &gt;&gt; v; int sum = 0; for(int i = 1;i &lt;= n;i ++){ cin &gt;&gt; a[i]; sum += a[i]; } sort(a+1,a+n+1); int l = 1,r = n; int mid; while(l &lt; r) { mid = l+r+1&gt;&gt; 1; //debug3(l,r,mid); if(check(mid))l = mid; else r = mid-1; } cout &lt;&lt; sum + n - l + 1&lt;&lt; endl; } signed main() { /* ios::sync_with_stdio(false); cin.tie(0); cout.tie(0); */ int T = 1;//cin &gt;&gt; T; while(T--){ solve(); } return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-05T07:04:01.000Z"}],["meta",{"property":"article:author","content":"俄罗斯刺沙蓬"}],["meta",{"property":"article:modified_time","content":"2023-07-05T07:04:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"D. Watch the Videos\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-05T07:04:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"俄罗斯刺沙蓬\\",\\"url\\":\\"https://cfddd.github.io/\\"}]}"]]},"headers":[],"git":{"createdTime":1688540641000,"updatedTime":1688540641000,"contributors":[{"name":"cfd","email":"2909047212@qq.com","commits":1}]},"readingTime":{"minutes":1.12,"words":337},"filePathRelative":"Algorithm/contents/D.WatchtheVideos.md","localizedDate":"2023年7月5日","excerpt":"<ul>\\n<li><a href=\\"https://codeforces.com/problemset/problem/1765/D\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://codeforces.com/problemset/problem/1765/D</a></li>\\n</ul>\\n<p>观察找规律</p>\\n<p>最大的和二分最小的，然后交替相邻，看是否合法</p>\\n<p>找到最长的合法段</p>\\n<p>答案就是总长度减去合法段加上原先的长度</p>\\n<div class=\\"language-text line-numbers-mode\\" data-ext=\\"text\\"><pre class=\\"language-text\\"><code>#include&lt;bits/stdc++.h&gt;\\n#define debug1(a) cout&lt;&lt;#a&lt;&lt;'='&lt;&lt; a &lt;&lt; endl;\\n#define debug2(a,b) cout&lt;&lt;#a&lt;&lt;\\" = \\"&lt;&lt;a&lt;&lt;\\"  \\"&lt;&lt;#b&lt;&lt;\\" = \\"&lt;&lt;b&lt;&lt;endl;\\n#define debug3(a,b,c) cout&lt;&lt;#a&lt;&lt;\\" = \\"&lt;&lt;a&lt;&lt;\\"  \\"&lt;&lt;#b&lt;&lt;\\" = \\"&lt;&lt;b&lt;&lt;\\"  \\"&lt;&lt;#c&lt;&lt;\\" = \\"&lt;&lt;c&lt;&lt;endl;\\n#define debug4(a,b,c,d) cout&lt;&lt;#a&lt;&lt;\\" = \\"&lt;&lt;a&lt;&lt;\\"  \\"&lt;&lt;#b&lt;&lt;\\" = \\"&lt;&lt;b&lt;&lt;\\"  \\"&lt;&lt;#c&lt;&lt;\\" = \\"&lt;&lt;c&lt;&lt;\\"  \\"&lt;&lt;#d&lt;&lt;\\" = \\"&lt;&lt;d&lt;&lt;endl;\\n#define debug5(a,b,c,d,e) cout&lt;&lt;#a&lt;&lt;\\" = \\"&lt;&lt;a&lt;&lt;\\"  \\"&lt;&lt;#b&lt;&lt;\\" = \\"&lt;&lt;b&lt;&lt;\\"  \\"&lt;&lt;#c&lt;&lt;\\" = \\"&lt;&lt;c&lt;&lt;\\"  \\"&lt;&lt;#d&lt;&lt;\\" = \\"&lt;&lt;d&lt;&lt;\\"  \\"&lt;&lt;#e&lt;&lt;\\" = \\"&lt;&lt;e&lt;&lt;endl;\\n#define debug0(x) cout &lt;&lt; \\"debug0: \\" &lt;&lt; x &lt;&lt; endl\\n#define fr(t, i, n)for (long long i = t; i &lt; n; i++)\\n#define YES cout&lt;&lt;\\"Yes\\"&lt;&lt;endl\\n#define NO cout&lt;&lt;\\"No\\"&lt;&lt;endl\\n#define fi first\\n#define se second\\n#define int long long\\nusing namespace std;\\n\\ntypedef long long LL;\\ntypedef unsigned long long ULL;\\ntypedef pair&lt;int,int&gt; PII;\\ntypedef pair&lt;LL,LL&gt; PLL;\\n\\n//#pragma GCC optimize(3,\\"Ofast\\",\\"inline\\")\\n//#pragma GCC optimize(2)\\n\\nconst int N = 2e5+10;\\nint a[N];\\nint n,v;\\n\\nbool check(int x)\\n{\\n    int l = 1,r = x;\\n    while(l &lt; r)\\n    {\\n        //debug2(l,r);\\n        if(a[l] + a[r] &gt; v)return false;\\n        r --;\\n        if(l &lt; r &amp;&amp; a[l] + a[r] &gt; v)return false;\\n        l ++;\\n    }\\n    return true;\\n}\\n\\nvoid solve() \\n{\\n    cin &gt;&gt; n &gt;&gt; v;\\n    int sum = 0;\\n    for(int i = 1;i &lt;= n;i ++){\\n        cin &gt;&gt; a[i];\\n        sum += a[i];\\n    }\\n    \\n    sort(a+1,a+n+1);\\n    \\n    int l = 1,r = n;\\n    int mid;\\n    while(l &lt; r)\\n    {\\n        mid = l+r+1&gt;&gt; 1;\\n        //debug3(l,r,mid);\\n        if(check(mid))l = mid;\\n        else r = mid-1;\\n        \\n    }\\n    \\n    cout &lt;&lt; sum + n - l + 1&lt;&lt; endl;\\n}\\n\\nsigned main()\\n{\\n    /*\\n    ios::sync_with_stdio(false);\\n    cin.tie(0);\\n    cout.tie(0);\\n    */\\n\\n    int T = 1;//cin &gt;&gt; T;\\n    while(T--){\\n        solve();\\n    }\\n    return 0;\\n}\\n\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{l as data};
