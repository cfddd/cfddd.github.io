const t=JSON.parse(`{"key":"v-1d626acf","path":"/Algorithm/contents/D.ProgramDP.html","title":"D. Program（有点难度的线性DP）","lang":"zh-CN","frontmatter":{"title":"D. Program（有点难度的线性DP）","icon":"calculator","description":"题目 D. Program 题意 给一个长度为n的‘+’，‘-’序列，表示+1和-1 在给m个查询，问忽略[l,r]之间的序列，能走到多少个不同的数字 思路 分为前后缀计算，前缀计算比较简单关键是后缀计算 后缀上，需要关注能够到达的最小值和最大值 定义sufL[i]和sufR[i]分别表示为到达的最小值和最大值 可以得出转移方程 now = s[i] == '+' ? 1 : -1; sufR[i] = max(sufR[i + 1] + now, 0); sufL[i] = min(sufL[i + 1] + now, 0);","head":[["meta",{"property":"og:url","content":"https://cfddd.github.io/Algorithm/contents/D.ProgramDP.html"}],["meta",{"property":"og:site_name","content":"俄罗斯刺沙蓬"}],["meta",{"property":"og:title","content":"D. Program（有点难度的线性DP）"}],["meta",{"property":"og:description","content":"题目 D. Program 题意 给一个长度为n的‘+’，‘-’序列，表示+1和-1 在给m个查询，问忽略[l,r]之间的序列，能走到多少个不同的数字 思路 分为前后缀计算，前缀计算比较简单关键是后缀计算 后缀上，需要关注能够到达的最小值和最大值 定义sufL[i]和sufR[i]分别表示为到达的最小值和最大值 可以得出转移方程 now = s[i] == '+' ? 1 : -1; sufR[i] = max(sufR[i + 1] + now, 0); sufL[i] = min(sufL[i + 1] + now, 0);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-05T07:04:01.000Z"}],["meta",{"property":"article:author","content":"俄罗斯刺沙蓬"}],["meta",{"property":"article:modified_time","content":"2023-07-05T07:04:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"D. Program（有点难度的线性DP）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-05T07:04:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"俄罗斯刺沙蓬\\",\\"url\\":\\"https://cfddd.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"题目","slug":"题目","link":"#题目","children":[]},{"level":2,"title":"题意","slug":"题意","link":"#题意","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]}],"git":{"createdTime":1688540641000,"updatedTime":1688540641000,"contributors":[{"name":"cfd","email":"2909047212@qq.com","commits":1}]},"readingTime":{"minutes":1.08,"words":325},"filePathRelative":"Algorithm/contents/D.ProgramDP.md","localizedDate":"2023年7月5日","excerpt":"<h2> 题目</h2>\\n<p><a href=\\"https://codeforces.com/problemset/problem/1473/D\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">D. Program</a></p>\\n<h2> 题意</h2>\\n<p>给一个长度为n的‘+’，‘-’序列，表示+1和-1<br>\\n在给m个查询，问忽略[l,r]之间的序列，能走到多少个不同的数字</p>\\n<h2> 思路</h2>\\n<ul>\\n<li>分为前后缀计算，前缀计算比较简单关键是后缀计算</li>\\n<li>后缀上，需要关注能够到达的最小值和最大值</li>\\n<li>定义sufL[i]和sufR[i]分别表示为到达的最小值和最大值</li>\\n<li>可以得出转移方程\\n<ul>\\n<li>now = s[i] == '+' ? 1 : -1;</li>\\n<li>sufR[i] = max(sufR[i + 1] + now, 0);</li>\\n<li>sufL[i] = min(sufL[i + 1] + now, 0);</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{t as data};
