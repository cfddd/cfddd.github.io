const e=JSON.parse('{"key":"v-d69302dc","path":"/Algorithm/contents/4_.html","title":"更新数组后处理求和查询(模板+普通线段树熟练掌握)","lang":"zh-CN","frontmatter":{"title":"更新数组后处理求和查询(模板+普通线段树熟练掌握)","icon":"calculator","description":"题目 https://leetcode.cn/problems/handling-sum-queries-after-update/description/ 思路 操作2和操作3都非常好实现，直接累加一个和就行 关键在于操作1（nums1数组所有元素大小在0~1之间）翻转 线段树相比树状数组更好理解 具体细节见代码","head":[["meta",{"property":"og:url","content":"https://cfddd.github.io/Algorithm/contents/4_.html"}],["meta",{"property":"og:site_name","content":"俄罗斯刺沙蓬"}],["meta",{"property":"og:title","content":"更新数组后处理求和查询(模板+普通线段树熟练掌握)"}],["meta",{"property":"og:description","content":"题目 https://leetcode.cn/problems/handling-sum-queries-after-update/description/ 思路 操作2和操作3都非常好实现，直接累加一个和就行 关键在于操作1（nums1数组所有元素大小在0~1之间）翻转 线段树相比树状数组更好理解 具体细节见代码"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-05T07:04:01.000Z"}],["meta",{"property":"article:author","content":"俄罗斯刺沙蓬"}],["meta",{"property":"article:modified_time","content":"2023-07-05T07:04:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"更新数组后处理求和查询(模板+普通线段树熟练掌握)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-05T07:04:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"俄罗斯刺沙蓬\\",\\"url\\":\\"https://cfddd.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"题目","slug":"题目","link":"#题目","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]}],"git":{"createdTime":1688540641000,"updatedTime":1688540641000,"contributors":[{"name":"cfd","email":"2909047212@qq.com","commits":1}]},"readingTime":{"minutes":1.5,"words":450},"filePathRelative":"Algorithm/contents/4_.md","localizedDate":"2023年7月5日","excerpt":"<h2> 题目</h2>\\n<ul>\\n<li><a href=\\"https://leetcode.cn/problems/handling-sum-queries-after-update/description/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://leetcode.cn/problems/handling-sum-queries-after-update/description/</a></li>\\n</ul>\\n<h2> 思路</h2>\\n<ul>\\n<li>操作2和操作3都非常好实现，直接累加一个和就行</li>\\n<li>关键在于操作1（nums1数组所有元素大小在0~1之间）翻转</li>\\n<li>线段树相比树状数组更好理解</li>\\n<li>具体细节见代码</li>\\n</ul>","autoDesc":true}');export{e as data};
