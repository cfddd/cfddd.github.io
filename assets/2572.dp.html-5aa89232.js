const s=JSON.parse('{"key":"v-290a1e36","path":"/Algorithm/2572.dp.html","title":"2572. 无平方子集计数（状态压缩dp）","lang":"zh-CN","frontmatter":{"title":"2572. 无平方子集计数（状态压缩dp）","icon":"calculator","description":"题目 https://leetcode.cn/problems/count-the-number-of-square-free-subsets/ 思路 类似01背包优化的状态压缩dp（误） 首先按照数字分出是否有平方子集，然后再计数cnt[x] 枚举合法的数字（2 ~ 30），为什么不算1？因为所有的1都有两种状态，选或者不选（或者说他不算是质数），直接在最后的结果上2cnt[1]2^{cnt[1]}2cnt[1]即可 枚举所有状态（0 ~ 1 &lt;&lt; 10, 倒着来是类似01背包的优化），如果和当前状态mask互不相交，递推至mask|j 最后无平方子集的数量就是(∑0210f)∗2cnt[1]−1(\\\\sum_0^{2^{10}}f) * 2^{cnt[1]} - 1(∑0210​f)∗2cnt[1]−1","head":[["meta",{"property":"og:url","content":"https://cfddd.github.io/Algorithm/2572.dp.html"}],["meta",{"property":"og:site_name","content":"俄罗斯刺沙蓬"}],["meta",{"property":"og:title","content":"2572. 无平方子集计数（状态压缩dp）"}],["meta",{"property":"og:description","content":"题目 https://leetcode.cn/problems/count-the-number-of-square-free-subsets/ 思路 类似01背包优化的状态压缩dp（误） 首先按照数字分出是否有平方子集，然后再计数cnt[x] 枚举合法的数字（2 ~ 30），为什么不算1？因为所有的1都有两种状态，选或者不选（或者说他不算是质数），直接在最后的结果上2cnt[1]2^{cnt[1]}2cnt[1]即可 枚举所有状态（0 ~ 1 &lt;&lt; 10, 倒着来是类似01背包的优化），如果和当前状态mask互不相交，递推至mask|j 最后无平方子集的数量就是(∑0210f)∗2cnt[1]−1(\\\\sum_0^{2^{10}}f) * 2^{cnt[1]} - 1(∑0210​f)∗2cnt[1]−1"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-03T12:00:26.000Z"}],["meta",{"property":"article:author","content":"俄罗斯刺沙蓬"}],["meta",{"property":"article:modified_time","content":"2023-07-03T12:00:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"2572. 无平方子集计数（状态压缩dp）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-03T12:00:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"俄罗斯刺沙蓬\\",\\"url\\":\\"https://cfddd.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"题目","slug":"题目","link":"#题目","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"代码","slug":"代码","link":"#代码","children":[]}],"git":{"createdTime":1688385626000,"updatedTime":1688385626000,"contributors":[{"name":"cfd","email":"2909047212@qq.com","commits":1}]},"readingTime":{"minutes":1.2,"words":360},"filePathRelative":"Algorithm/2572.dp.md","localizedDate":"2023年7月3日","excerpt":"<h2> 题目</h2>\\n<ul>\\n<li><a href=\\"https://leetcode.cn/problems/count-the-number-of-square-free-subsets/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://leetcode.cn/problems/count-the-number-of-square-free-subsets/</a></li>\\n</ul>\\n<h2> 思路</h2>\\n<ul>\\n<li>类似01背包优化的状态压缩dp（误）</li>\\n<li>首先按照数字分出是否有平方子集，然后再计数cnt[x]</li>\\n<li>枚举合法的数字（2 ~ 30），为什么不算1？因为所有的1都有两种状态，选或者不选（或者说他不算是质数），直接在最后的结果上<span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><msup><mn>2</mn><mrow><mi>c</mi><mi>n</mi><mi>t</mi><mo stretchy=\\"false\\">[</mo><mn>1</mn><mo stretchy=\\"false\\">]</mo></mrow></msup></mrow><annotation encoding=\\"application/x-tex\\">2^{cnt[1]}</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.888em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\">2</span><span class=\\"msupsub\\"><span class=\\"vlist-t\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.888em;\\"><span style=\\"top:-3.063em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mathnormal mtight\\">c</span><span class=\\"mord mathnormal mtight\\">n</span><span class=\\"mord mathnormal mtight\\">t</span><span class=\\"mopen mtight\\">[</span><span class=\\"mord mtight\\">1</span><span class=\\"mclose mtight\\">]</span></span></span></span></span></span></span></span></span></span></span></span>即可</li>\\n<li>枚举所有状态（0 ~ 1 &lt;&lt; 10, 倒着来是类似01背包的优化），如果和当前状态mask互不相交，递推至mask|j</li>\\n<li>最后无平方子集的数量就是<span class=\\"katex\\"><span class=\\"katex-mathml\\"><math xmlns=\\"http://www.w3.org/1998/Math/MathML\\"><semantics><mrow><mo stretchy=\\"false\\">(</mo><msubsup><mo>∑</mo><mn>0</mn><msup><mn>2</mn><mn>10</mn></msup></msubsup><mi>f</mi><mo stretchy=\\"false\\">)</mo><mo>∗</mo><msup><mn>2</mn><mrow><mi>c</mi><mi>n</mi><mi>t</mi><mo stretchy=\\"false\\">[</mo><mn>1</mn><mo stretchy=\\"false\\">]</mo></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\\"application/x-tex\\">(\\\\sum_0^{2^{10}}f) * 2^{cnt[1]} - 1</annotation></semantics></math></span><span class=\\"katex-html\\" aria-hidden=\\"true\\"><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:1.4265em;vertical-align:-0.2997em;\\"></span><span class=\\"mopen\\">(</span><span class=\\"mop\\"><span class=\\"mop op-symbol small-op\\" style=\\"position:relative;top:0em;\\">∑</span><span class=\\"msupsub\\"><span class=\\"vlist-t vlist-t2\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:1.1268em;\\"><span style=\\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\">0</span></span></span><span style=\\"top:-3.2029em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mtight\\">2</span><span class=\\"msupsub\\"><span class=\\"vlist-t\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.8913em;\\"><span style=\\"top:-2.931em;margin-right:0.0714em;\\"><span class=\\"pstrut\\" style=\\"height:2.5em;\\"></span><span class=\\"sizing reset-size3 size1 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mtight\\">10</span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\\"vlist-s\\">​</span></span><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.2997em;\\"><span></span></span></span></span></span></span><span class=\\"mspace\\" style=\\"margin-right:0.1667em;\\"></span><span class=\\"mord mathnormal\\" style=\\"margin-right:0.10764em;\\">f</span><span class=\\"mclose\\">)</span><span class=\\"mspace\\" style=\\"margin-right:0.2222em;\\"></span><span class=\\"mbin\\">∗</span><span class=\\"mspace\\" style=\\"margin-right:0.2222em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.9713em;vertical-align:-0.0833em;\\"></span><span class=\\"mord\\"><span class=\\"mord\\">2</span><span class=\\"msupsub\\"><span class=\\"vlist-t\\"><span class=\\"vlist-r\\"><span class=\\"vlist\\" style=\\"height:0.888em;\\"><span style=\\"top:-3.063em;margin-right:0.05em;\\"><span class=\\"pstrut\\" style=\\"height:2.7em;\\"></span><span class=\\"sizing reset-size6 size3 mtight\\"><span class=\\"mord mtight\\"><span class=\\"mord mathnormal mtight\\">c</span><span class=\\"mord mathnormal mtight\\">n</span><span class=\\"mord mathnormal mtight\\">t</span><span class=\\"mopen mtight\\">[</span><span class=\\"mord mtight\\">1</span><span class=\\"mclose mtight\\">]</span></span></span></span></span></span></span></span></span><span class=\\"mspace\\" style=\\"margin-right:0.2222em;\\"></span><span class=\\"mbin\\">−</span><span class=\\"mspace\\" style=\\"margin-right:0.2222em;\\"></span></span><span class=\\"base\\"><span class=\\"strut\\" style=\\"height:0.6444em;\\"></span><span class=\\"mord\\">1</span></span></span></span></li>\\n</ul>","autoDesc":true}');export{s as data};
