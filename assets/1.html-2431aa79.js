const t=JSON.parse('{"key":"v-7a2fbafa","path":"/OS/1.html","title":"c++多线程之互斥锁","lang":"zh-CN","frontmatter":{"title":"c++多线程之互斥锁","icon":"desktop","date":"2023-07-03T00:00:00.000Z","description":"C++中多线程的实现方式有多种，其中可以使用操作系统相关的线程API，如在Linux上，可以使用pthread库；也可以使用boost::thread库或者自从C++ 11开始支持的std::thread1。 pthread库是POSIX线程库，是一套线程API，它定义了一套标准的线程操作函数，可以在多种平台上使用。boost::thread库是一个跨平台的C++多线程库，它提供了一些高级的线程操作接口。std::thread是C++11标准中提供的多线程库，它提供了一些高级的线程操作接口1。 互斥锁 在线程里也有这么一把锁——互斥锁（mutex），互斥锁是一种简单的加锁的方法来控制对共享资源的访问，互斥锁只有两种状态,即上锁( lock )和解锁( unlock )。","head":[["meta",{"property":"og:url","content":"https://cfddd.github.io/OS/1.html"}],["meta",{"property":"og:site_name","content":"俄罗斯刺沙蓬"}],["meta",{"property":"og:title","content":"c++多线程之互斥锁"}],["meta",{"property":"og:description","content":"C++中多线程的实现方式有多种，其中可以使用操作系统相关的线程API，如在Linux上，可以使用pthread库；也可以使用boost::thread库或者自从C++ 11开始支持的std::thread1。 pthread库是POSIX线程库，是一套线程API，它定义了一套标准的线程操作函数，可以在多种平台上使用。boost::thread库是一个跨平台的C++多线程库，它提供了一些高级的线程操作接口。std::thread是C++11标准中提供的多线程库，它提供了一些高级的线程操作接口1。 互斥锁 在线程里也有这么一把锁——互斥锁（mutex），互斥锁是一种简单的加锁的方法来控制对共享资源的访问，互斥锁只有两种状态,即上锁( lock )和解锁( unlock )。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-04T02:44:14.000Z"}],["meta",{"property":"article:author","content":"俄罗斯刺沙蓬"}],["meta",{"property":"article:published_time","content":"2023-07-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-04T02:44:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"c++多线程之互斥锁\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-07-04T02:44:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"俄罗斯刺沙蓬\\",\\"url\\":\\"https://cfddd.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"样例使用","slug":"样例使用","link":"#样例使用","children":[]},{"level":2,"title":"代码应用","slug":"代码应用","link":"#代码应用","children":[]},{"level":2,"title":"参考代码","slug":"参考代码","link":"#参考代码","children":[]}],"git":{"createdTime":1688438654000,"updatedTime":1688438654000,"contributors":[{"name":"cfd","email":"2909047212@qq.com","commits":1}]},"readingTime":{"minutes":6.48,"words":1944},"filePathRelative":"OS/1.md","localizedDate":"2023年7月3日","excerpt":"<p>C++中多线程的实现方式有多种，其中可以使用操作系统相关的线程API，如在Linux上，可以使用pthread库；也可以使用boost::thread库或者自从C++ 11开始支持的std::thread1。</p>\\n<p>pthread库是POSIX线程库，是一套线程API，它定义了一套标准的线程操作函数，可以在多种平台上使用。boost::thread库是一个跨平台的C++多线程库，它提供了一些高级的线程操作接口。std::thread是C++11标准中提供的多线程库，它提供了一些高级的线程操作接口1。</p>\\n<h1> 互斥锁</h1>\\n<p>在线程里也有这么一把锁——互斥锁（mutex），互斥锁是一种简单的加锁的方法来控制对共享资源的访问，互斥锁只有两种状态,即上锁( lock )和解锁( unlock )。</p>","autoDesc":true}');export{t as data};
