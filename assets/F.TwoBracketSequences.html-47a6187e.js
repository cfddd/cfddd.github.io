const e=JSON.parse(`{"key":"v-55984024","path":"/Algorithm/F.TwoBracketSequences.html","title":"F. Two Bracket Sequences（记忆化搜索，状态选择）","lang":"zh-CN","frontmatter":{"title":"F. Two Bracket Sequences（记忆化搜索，状态选择）","icon":"calculator","description":"题目 https://codeforces.com/contest/1272/problem/F 题意 给两个括号字符串，找到一个括号序列合法的超字符串 思路 类似方法 问题一：如何找到最短长度的值 dp[i,j,k]表示s目前在匹配了第i个，前面匹配完了，j同理，k表示左括号比右括号多多少，超字符串的最小长度 从左往右考虑，如果放一个'('，如果字符串s或t可以匹配则向后走一位，对于')'同理 当s和t都匹配完了，需要判断 如果k=0，那么这是一次合理的放置 如果k!=0，那么这不是一次合理的方案，返回无穷大（无解） 使用记忆化搜索计算所有的dp状态 问题二：如何构造这个字符串 类似上面的记忆化状态，因为已经知道了所有状态的结果，可以想出一棵结果二叉树，即什么位置放什么，怎么走到叶子节点最近 第一个位置显然放'('，然后与s和t做匹配， 如果k=0，那么这个位置只能放'(' 如果k!=0，那么这个位置既能放'('，又能放')' 走到终点结束，输出每次的选择","head":[["meta",{"property":"og:url","content":"https://cfddd.github.io/Algorithm/F.TwoBracketSequences.html"}],["meta",{"property":"og:site_name","content":"俄罗斯刺沙蓬"}],["meta",{"property":"og:title","content":"F. Two Bracket Sequences（记忆化搜索，状态选择）"}],["meta",{"property":"og:description","content":"题目 https://codeforces.com/contest/1272/problem/F 题意 给两个括号字符串，找到一个括号序列合法的超字符串 思路 类似方法 问题一：如何找到最短长度的值 dp[i,j,k]表示s目前在匹配了第i个，前面匹配完了，j同理，k表示左括号比右括号多多少，超字符串的最小长度 从左往右考虑，如果放一个'('，如果字符串s或t可以匹配则向后走一位，对于')'同理 当s和t都匹配完了，需要判断 如果k=0，那么这是一次合理的放置 如果k!=0，那么这不是一次合理的方案，返回无穷大（无解） 使用记忆化搜索计算所有的dp状态 问题二：如何构造这个字符串 类似上面的记忆化状态，因为已经知道了所有状态的结果，可以想出一棵结果二叉树，即什么位置放什么，怎么走到叶子节点最近 第一个位置显然放'('，然后与s和t做匹配， 如果k=0，那么这个位置只能放'(' 如果k!=0，那么这个位置既能放'('，又能放')' 走到终点结束，输出每次的选择"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-03T12:00:26.000Z"}],["meta",{"property":"article:author","content":"俄罗斯刺沙蓬"}],["meta",{"property":"article:modified_time","content":"2023-07-03T12:00:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"F. Two Bracket Sequences（记忆化搜索，状态选择）\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-03T12:00:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"俄罗斯刺沙蓬\\",\\"url\\":\\"https://cfddd.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"题目","slug":"题目","link":"#题目","children":[]},{"level":2,"title":"题意","slug":"题意","link":"#题意","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"参考代码","slug":"参考代码","link":"#参考代码","children":[]}],"git":{"createdTime":1688385626000,"updatedTime":1688385626000,"contributors":[{"name":"cfd","email":"2909047212@qq.com","commits":1}]},"readingTime":{"minutes":1.76,"words":528},"filePathRelative":"Algorithm/F.TwoBracketSequences.md","localizedDate":"2023年7月3日","excerpt":"<h2> 题目</h2>\\n<p><a href=\\"https://codeforces.com/contest/1272/problem/F\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://codeforces.com/contest/1272/problem/F</a></p>\\n<h2> 题意</h2>\\n<p>给两个括号字符串，找到一个括号序列合法的超字符串</p>\\n<h2> 思路</h2>\\n<ul>\\n<li>\\n<p><a href=\\"https://leetcode.cn/problems/shortest-common-supersequence/solutions/2194615/cong-di-gui-dao-di-tui-jiao-ni-yi-bu-bu-auy8z/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">类似方法</a></p>\\n</li>\\n<li>\\n<p>问题一：如何找到最短长度的值</p>\\n</li>\\n<li>\\n<p>dp[i,j,k]表示s目前在匹配了第i个，前面匹配完了，j同理，k表示左括号比右括号多多少，超字符串的最小长度</p>\\n</li>\\n<li>\\n<p>从左往右考虑，如果放一个'('，如果字符串s或t可以匹配则向后走一位，对于')'同理</p>\\n</li>\\n<li>\\n<p>当s和t都匹配完了，需要判断</p>\\n<ul>\\n<li>如果k=0，那么这是一次合理的放置</li>\\n<li>如果k!=0，那么这不是一次合理的方案，返回无穷大（无解）</li>\\n</ul>\\n</li>\\n<li>\\n<p>使用记忆化搜索计算所有的dp状态</p>\\n</li>\\n<li>\\n<p>问题二：如何构造这个字符串</p>\\n</li>\\n<li>\\n<p>类似上面的记忆化状态，因为已经知道了所有状态的结果，可以想出一棵结果二叉树，即什么位置放什么，怎么走到叶子节点最近</p>\\n</li>\\n<li>\\n<p>第一个位置显然放'('，然后与s和t做匹配，</p>\\n<ul>\\n<li>如果k=0，那么这个位置只能放'('</li>\\n<li>如果k!=0，那么这个位置既能放'('，又能放')'</li>\\n</ul>\\n</li>\\n<li>\\n<p>走到终点结束，输出每次的选择</p>\\n</li>\\n</ul>","autoDesc":true}`);export{e as data};
